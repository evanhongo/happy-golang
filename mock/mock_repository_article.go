// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	entity "github.com/evanhongo/happy-golang/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockIArticleRepo is a mock of IArticleRepo interface.
type MockIArticleRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIArticleRepoMockRecorder
}

// MockIArticleRepoMockRecorder is the mock recorder for MockIArticleRepo.
type MockIArticleRepoMockRecorder struct {
	mock *MockIArticleRepo
}

// NewMockIArticleRepo creates a new mock instance.
func NewMockIArticleRepo(ctrl *gomock.Controller) *MockIArticleRepo {
	mock := &MockIArticleRepo{ctrl: ctrl}
	mock.recorder = &MockIArticleRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIArticleRepo) EXPECT() *MockIArticleRepoMockRecorder {
	return m.recorder
}

// GetAllArticles mocks base method.
func (m *MockIArticleRepo) GetAllArticles() ([]entity.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllArticles")
	ret0, _ := ret[0].([]entity.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllArticles indicates an expected call of GetAllArticles.
func (mr *MockIArticleRepoMockRecorder) GetAllArticles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllArticles", reflect.TypeOf((*MockIArticleRepo)(nil).GetAllArticles))
}
